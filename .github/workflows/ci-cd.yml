name: CI/CD Pipeline Nasjod

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  # test-and-lint:
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'pull_request'

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.12'

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #         pip install pytest flake8

  #     - name: Run flake8 linting
  #       run: flake8 .

  #     - name: Run pytest
  #       run: pytest

  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/nasjod-api:latest
          labels: |
            version=${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_SSH_USER }}@${{ secrets.VPS_SSH_HOST }} << 'EOF'
            cd /opt/projects/nasjod
            if ! docker-compose pull; then
              echo "docker-compose pull failed, attempting individual docker pulls..."
              docker pull ghcr.io/azima-net/nasjod-frontend:latest || { echo "Failed to pull nasjod-frontend"; exit 1; }
              docker pull ghcr.io/azima-net/nasjod-api:latest || { echo "Failed to pull nasjod-api"; exit 1; }
            fi
            docker-compose up -d
          EOF
